import os
import json
import openai
import requests
from flask import Flask, request, jsonify
from datetime import datetime
import pytz

app = Flask(__name__)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
FIBERY_API_TOKEN = os.getenv("FIBERY_API_TOKEN")
FIBERY_WORKSPACE = os.getenv("FIBERY_WORKSPACE")

openai.api_key = OPENAI_API_KEY

@app.route('/webhook', methods=['POST'])
def webhook():
    data = request.get_json()
    print("[DEBUG] –í—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:", data)

    message = data.get('message', {})
    chat_id = message.get('chat', {}).get('id')
    message_id = message.get('message_id')
    text = message.get('text', '')

    if not text:
        return jsonify({"status": "no text"})

    system_prompt = f"""
–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏ –∏–∑ Telegram –∏ –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å JSON-–æ–±—ä–µ–∫—Ç —Å –∫–ª—é—á–∞–º–∏:
- "title": –∫–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
- "description": –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ "")
- "due_date": ISO-–¥–∞—Ç–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å —Å—Ä–æ–∫), –ø—Ä–∏–º–µ—Ä: "2025-08-07T15:00:00"
- "labels": —Å–ø–∏—Å–æ–∫ –º–µ—Ç–æ–∫ (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º)

–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {datetime.now().strftime('%Y-%m-%d %H:%M')}
    """

    user_prompt = f"–í–æ—Ç –∑–∞–¥–∞—á–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {text}"

    gpt_response = openai.ChatCompletion.create(
        model="gpt-4",
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": user_prompt}
        ],
        temperature=0.4,
    )

    content = gpt_response.choices[0].message.content
    print("[DEBUG] GPT RESPONSE:", content)

    try:
        json_start = content.find("{")
        json_data = content[json_start:]
        task_data = json.loads(json_data)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ GPT-–æ—Ç–≤–µ—Ç–∞:", e)
        return jsonify({"error": "–û—à–∏–±–∫–∞ GPT-–æ—Ç–≤–µ—Ç–∞"})

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    payload = {
        "fibery/type": "Magatron space/task",
        "Name": task_data.get("title", ""),
        "Description": task_data.get("description", ""),
        "Due Date": task_data.get("due_date"),
        "Labels": task_data.get("labels", []),
        "Telegram Chat ID": str(chat_id),
        "Telegram Message ID": str(message_id),
        "Created in Telegram": True
    }

    print("[DEBUG] üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Fibery:\n", payload)

    fibery_url = f"https://{FIBERY_WORKSPACE}.fibery.io/api/entities/Magatron%20space/task"
    headers = {
        "Authorization": f"Token {FIBERY_API_TOKEN}",
        "Content-Type": "application/json"
    }

    response = requests.post(fibery_url, headers=headers, json=payload)

    if response.status_code != 200:
        print("‚ùå Fibery –Ω–µ –ø—Ä–∏–Ω—è–ª –∑–∞–¥–∞—á—É:", response.text)
    else:
        print("‚úÖ –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ Fibery")

    return jsonify({"status": "ok"})
