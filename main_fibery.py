import os
import json
from flask import Flask, request
import openai
import requests
from datetime import datetime
import dateparser

app = Flask(__name__)

openai.api_key = os.getenv("OPENAI_API_KEY")
FIBERY_API_URL = "https://magatron-lab.fibery.io/api/entities"
FIBERY_API_TOKEN = os.getenv("FIBERY_API_TOKEN")
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

HEADERS = {
    "Authorization": f"Token {FIBERY_API_TOKEN}",
    "Content-Type": "application/json"
}

@app.route('/webhook', methods=['POST'])
def webhook():
    data = request.json
    print("[DEBUG] –í—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:", data)

    message = data.get("message", {}).get("text", "")
    chat_id = data.get("message", {}).get("chat", {}).get("id")
    message_id = data.get("message", {}).get("message_id")

    if not message or not chat_id:
        return "no message", 200

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ GPT
    prompt = f"""
–¢—ã ‚Äî –ø–∞—Ä—Å–µ—Ä –∑–∞–¥–∞—á. –ù–∞ –≤—Ö–æ–¥ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: "–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É: –ö—É–ø–∏—Ç—å –º–æ–ª–æ–∫–æ –∑–∞–≤—Ç—Ä–∞ –≤ 14:00".

–¢—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ—à—å JSON —Å –ø–æ–ª—è–º–∏:
- title: –∫—Ä–∞—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
- description: –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–ø–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–π –ø—É—Å—Ç—ã–º)
- due_date: ISO-—Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –¥–µ–¥–ª–∞–π–Ω–∞ (–ø—Ä–∏–º–µ—Ä: 2025-08-06T14:00:00)
- labels: —Å–ø–∏—Å–æ–∫ –º–µ—Ç–æ–∫ (–ø–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–π –ø—É—Å—Ç—ã–º)

–°–ï–ô–ß–ê–°: {datetime.now().isoformat()}
–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨: {message}
JSON:
"""

    try:
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ—Ç –∑–∞–¥–∞—á–∏."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.3
        )
        gpt_reply = response.choices[0].message["content"]
        print("[DEBUG] GPT RESPONSE:", gpt_reply)
        parsed = json.loads(gpt_reply)

        title = parsed["title"]
        description = parsed.get("description", "")
        due_date = parsed.get("due_date", None)
        labels = parsed.get("labels", [])

        payload = {
            "fibery/type": "Magatron space/Task",  # <-- –í–ê–ñ–ù–û: –ó–∞–≥–ª–∞–≤–Ω–∞—è T!
            "Name": title,
            "Description": description,
            "Due Date": due_date,
            "Labels": labels,
            "Telegram Chat ID": str(chat_id),
            "Telegram Message ID": str(message_id),
            "Created in Telegram": True
        }

        print("[DEBUG] üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Fibery:\n\n", payload)

        fibery_response = requests.post(
            f"{FIBERY_API_URL}/Magatron space/Task",
            headers=HEADERS,
            data=json.dumps(payload)
        )

        if fibery_response.status_code == 200:
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Fibery")
        else:
            print("‚ùå Fibery –Ω–µ –ø—Ä–∏–Ω—è–ª –∑–∞–¥–∞—á—É:", fibery_response.text)

    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ GPT-–æ—Ç–≤–µ—Ç–∞:", e)

    return "ok", 200
