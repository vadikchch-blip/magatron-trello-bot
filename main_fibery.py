import os
import openai
import requests
from flask import Flask, request, jsonify
from datetime import datetime
from dotenv import load_dotenv

load_dotenv()

app = Flask(__name__)
openai.api_key = os.getenv("OPENAI_API_KEY")

FIBERY_API_TOKEN = os.getenv("FIBERY_API_TOKEN")
FIBERY_WORKSPACE = os.getenv("FIBERY_WORKSPACE")

FIBERY_HEADERS = {
    "Authorization": f"Token {FIBERY_API_TOKEN}",
    "Content-Type": "application/json"
}

FIBERY_URL = f"https://{FIBERY_WORKSPACE}.fibery.io/api/entities/Task"

SYSTEM_PROMPT = """
–¢—ã –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∑–∞–¥–∞—á–∏. 
–¢–≤–æ—è —Ü–µ–ª—å ‚Äî –≤—ã–¥–µ–ª–∏—Ç—å –∏–∑ —Ç–µ–∫—Å—Ç–∞:

1. title ‚Äî –∫–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
2. description ‚Äî –µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ—è—Å–Ω–µ–Ω–∏–µ, –¥–æ–±–∞–≤—å —Å—é–¥–∞
3. due_date ‚Äî –∫—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫ –∑–∞–¥–∞—á–∏ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO 8601)
4. labels ‚Äî —Å–ø–∏—Å–æ–∫ –º–µ—Ç–æ–∫ (–ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É)

–ï—Å–ª–∏ –¥–∞—Ç–∞ —É–∫–∞–∑–∞–Ω–∞ –∫–∞–∫ "–∑–∞–≤—Ç—Ä–∞", "–≤ –ø—è—Ç–Ω–∏—Ü—É", "—á–µ—Ä–µ–∑ 2 –¥–Ω—è", –∏—Å–ø–æ–ª—å–∑—É–π —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∫–∞–∫ –æ–ø–æ—Ä–Ω—É—é: {{CURRENT_DATETIME}}.
"""

@app.route("/webhook", methods=["POST"])
def telegram_webhook():
    data = request.json

    message = data.get("message", {})
    chat_id = message.get("chat", {}).get("id")
    message_id = message.get("message_id")
    text = message.get("text", "")

    print(f"[DEBUG] –í—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {text}")

    now = datetime.now().isoformat()
    prompt = SYSTEM_PROMPT.replace("{{CURRENT_DATETIME}}", now)

    gpt_response = openai.ChatCompletion.create(
        model="gpt-4",
        messages=[
            {"role": "system", "content": prompt},
            {"role": "user", "content": text}
        ]
    )

    content = gpt_response.choices[0].message.content
    try:
        task_data = eval(content)
        print("[DEBUG] GPT RESPONSE:", task_data)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ GPT-–æ—Ç–≤–µ—Ç–∞:", e)
        return jsonify({"ok": True})

    fibery_payload = {
        "fibery/type": "Task",
        "Name": task_data.get("title"),
        "Description": task_data.get("description", ""),
        "Due Date": task_data.get("due_date"),
        "Labels": task_data.get("labels", []),
        "Telegram Chat ID": str(chat_id),
        "Telegram Message ID": str(message_id),
        "Created in Telegram": True
    }

    print("[DEBUG] üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Fibery:\n", fibery_payload)

    response = requests.post(
        FIBERY_URL,
        headers=FIBERY_HEADERS,
        json=fibery_payload
    )

    if response.status_code == 200:
        print("‚úÖ –ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ Fibery.")
    else:
        print("‚ùå Fibery –Ω–µ –ø—Ä–∏–Ω—è–ª –∑–∞–¥–∞—á—É:", response.text)

    return jsonify({"ok": True})
